name: vault
summary: Vault is a tool for securely accessing secrets.
description: |
  A modern system requires access to a multitude of secrets: database
  credentials, API keys for external services, credentials for service-oriented
  architecture communication, etc. Understanding who is accessing what secrets
  is already very difficult and platform-specific. Adding on key rolling,
  secure storage, and detailed audit logs is almost impossible without a custom
  solution. This is where Vault steps in.
base: core22
version: 1.15.4

grade: stable
confinement: strict

apps:
  vault:
    command: bin/vault
    plugs:
      - network
      - network-bind
      - home
  vaultd:
    daemon: simple
    install-mode: disable
    command: bin/vaultd-start
    refresh-mode: endure
    reload-command: bin/vaultd-reload
    stop-command: bin/vaultd-stop
    restart-condition: on-failure
    stop-mode: sigterm
    plugs:
      - network
      - network-bind

parts:
  vault:
    source: https://github.com/hashicorp/vault.git
    source-tag: "v$SNAPCRAFT_PROJECT_VERSION"
    plugin: go
    go-buildtags:
      - vault
      - ui
    build-snaps:
      - go/1.21/stable
    build-packages:
      - git
      - g++
      - libsasl2-dev
      - curl
      - gnupg
    override-build: |
      DEB_TARGET_ARCH=`dpkg-architecture -qDEB_TARGET_ARCH`
      if [ "$DEB_TARGET_ARCH" = "amd64" ] || [ "$DEB_TARGET_ARCH" = "arm64" ]; then
           # Install nodejs 14
          REPO="https://deb.nodesource.com/node_14.x"
          echo "deb $REPO focal main" > /etc/apt/sources.list.d/nodesource.list
          curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor | apt-key add -

          # Install yarn
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
          curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
          apt-get update
          apt-get install -y nodejs yarn=1.19.1-1

          # Build the WebUI assets
          make static-dist
      fi
      # Complete the main go build
      craftctl default
      # Manually strip binaries
      strip -s $CRAFT_PART_INSTALL/bin/*

  service-files:
    plugin: dump
    source: snap/service
